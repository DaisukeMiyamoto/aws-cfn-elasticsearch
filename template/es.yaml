AWSTemplateFormatVersion: 2010-09-09

Description: |
  LogManager: v0.1.0 -
  Kinesis Firehose, Elasticsearch, S3

Parameters:
  LogBucketName:
    Type: String
    AllowedPattern: '[a-z][a-z0-9]*'
    Description: Name of Amazon S3 bucket for log [a-z][a-z0-9]*

  ElasticsearchDomainName:
    Type: String
    AllowedPattern: '[a-z][a-z0-9]*'
    Description: Name of Elasticsearch domain for log [a-z][a-z0-9]*

  ElasticsearchIndexName:
    Type: String
    AllowedPattern: '[a-z][a-z0-9]*'
    Description: Name of Elasticsearch index from Kinesis Firehose [a-z][a-z0-9]*
    
  FirehoseName:
    Type: String
    AllowedPattern: '[a-z][a-z0-9]*'
    Description: DeliveryStream for ES and S3 [a-z][a-z0-9]*


Resources:

  ElasticsearchDomain: 
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: !Sub "${ElasticsearchDomainName}"
      ElasticsearchVersion: "6.2"
      ElasticsearchClusterConfig: 
        InstanceCount: "1"
        InstanceType: "m4.large.elasticsearch"
      EBSOptions: 
        EBSEnabled: true
        Iops: 0
        VolumeSize: 10
        VolumeType: "gp2"
      SnapshotOptions: 
        AutomatedSnapshotStartHour: "0"
      AccessPolicies: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/*"

  ESDeliveryStream: 
    Type: AWS::KinesisFirehose::DeliveryStream
    DependsOn:
      - DeliveryRole
      - DeliveryPolicy
      - ElasticsearchDomain
    Properties:
      DeliveryStreamName: !Sub "${FirehoseName}"
      DeliveryStreamType: "DirectPut"
      ElasticsearchDestinationConfiguration: 
        BufferingHints: 
          IntervalInSeconds: "60"
          SizeInMBs: 50
        CloudWatchLoggingOptions: 
          Enabled: true
          LogGroupName: "deliverystream"
          LogStreamName: "elasticsearchDelivery"
        DomainARN: !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}"
        IndexName: !Ref "ElasticsearchIndexName"
        IndexRotationPeriod: "NoRotation"
        TypeName: "fromFirehose"
        RetryOptions: 
          DurationInSeconds: "60"
        RoleARN: !GetAtt DeliveryRole.Arn
        S3BackupMode: "AllDocuments"
        S3Configuration: 
          BucketARN: !Sub "arn:aws:s3:::${LogBucketName}"
          BufferingHints: 
            IntervalInSeconds: "60"
            SizeInMBs: "50"
          CompressionFormat: "UNCOMPRESSED"
          Prefix: "log/"
          RoleARN: !GetAtt DeliveryRole.Arn 
          CloudWatchLoggingOptions: 
            Enabled: true
            LogGroupName: "deliverystream"
            LogStreamName: "s3Backup"

  DeliveryRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - 'firehose.amazonaws.com'
            Condition:
              StringEquals:
                'sts:ExternalId' : !Ref 'AWS::AccountId'
      RoleName: "DeliveryRole"

  DeliveryPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: "DeliveryPolicy"
      Roles:
        - !Ref "DeliveryRole"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:AbortMultipartUpload'
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:ListBucketMultipartUploads'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource:
              - !Sub 'arn:aws:s3:::${LogBucketName}'
              - !Sub 'arn:aws:s3:::${LogBucketName}/*'
          - Effect: Allow
            Action:
              - 'lambda:InvokeFunction'
              - 'lambda:GetFunctionConfiguration'
            Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%'
          - Effect: Allow
            Action:
              - 'es:DescribeElasticsearchDomain'
              - 'es:DescribeElasticsearchDomains'
              - 'es:DescribeElasticsearchDomainConfig'
              - 'es:ESHttpPost'
              - 'es:ESHttpPut'
            Resource:
              - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}"
              - !Sub "arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/*"
          - Effect: Allow
            Action:
              - 'es:ESHttpGet'
            Resource:
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_all/_settings'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_cluster/stats'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/${ElasticsearchIndexName}*/_mapping/superstore'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_nodes'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_nodes/stats'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_nodes/*/stats'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/_stats'
              - !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ElasticsearchDomainName}/${ElasticsearchIndexName}*/_stats'
          - Effect: Allow
            Action:
              - 'logs:PutLogEvents'
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/:log-stream:*'
          - Effect: Allow
            Action:
              - 'kinesis:DescribeStream'
              - 'kinesis:GetShardIterator'
              - 'kinesis:GetRecords'
            Resource: !Sub 'arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/%FIREHOSE_STREAM_NAME%'
          - Effect: Allow
            Action:
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource:
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/%SSE_KEY_ARN%'
            Condition:
              StringEquals:
                'kms:ViaService': !Sub 's3.${AWS::Region}.amazonaws.com'
              StringLike:
                'kms:EncryptionContext:aws:s3:arn': !Sub 'arn:aws:::${LogBucketName}/*'

  LogBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref "LogBucketName"
      AccessControl: Private
